[
    {
    	"name": "Read the notes",
    	"meta": "start",
    	"body": "<p>I've learned a lot from many people and I'd like to make the knowledge I have available to others in turn.</p><p>Each note here will reflect a part of that knowledge, and be a chance to clarify and expand on it.</p><p>More notes will follow."
    },
    {
    	"name": "Set an environment variable in the shell (terminal/CLI)",
    	"meta": "",
    	"body": "<p>On <t>Linux</t> and other <t>Unix-like</t> systems, an <t>environment variable</t> can be set in the <t>shell</t> with the <code>export</code> command.</p><code class=\"text--block\"><span class=\"text--block text--vsmall\">shell (Unix-like)</span><span class=\"code--kw\">export</span> <span class=\"code--id\">VAR_NAME</span><span class=\"code--op\">=</span><span class=\"code--vl\">value</span></code><p>Enclosing quotation marks are required for a value with spaces.</p><code class=\"text--block\"><span class=\"code--kw\">export</span> <span class=\"code--id\">VAR_NAME</span><span class=\"code--op\">=</span><span class=\"code--vl\">\"value with spaces\"</span></code><p>A variable set in this way is inherited by <t>child process</t>es. It is valid for one shell session only, but persists if the assignment is added to the <span class=\"text--mono\"><t>.bashrc</t></span> file in the <t>home directory</t>. A change can be applied by restarting the shell.</p><p>On <t>Windows</t> systems, in <t>PowerShell</t>, an environment variable can be set with <code>$env:</code>.</p><code class=\"text--block\"><span class=\"text--block text--vsmall\">PowerShell</span><span class=\"code--kw\">$env</span>:<span class=\"code--id\">VAR_NAME1</span> <span class=\"code--op\">=</span> <span class=\"code--vl\">value</span><br><span class=\"code--kw\">$env</span>:<span class=\"code--id\">VAR_NAME2</span> <span class=\"code--op\">=</span> <span class=\"code--vl\">'longer_value'</span></code><p>Environment variables can also be set in a <span class=\"text--mono\"><t>.env</t></span> file acting as a single source of truth, to be <t>import</t>ed elsewhere.</p>"
    },
    {
        "name": "Use a .env file",
        "meta": "",
        "body": "<p>One or more <t>environment variable</t>s can be set in a <span class=\"text--mono\"><t>.env</t></span> file.</p><p>A <span class=\"text--mono\">.env</span> file can act as a single source of truth and its contents can be imported by other code, e.g. the package <span class=\"text--mono\"><t>dotenv</t></span>.</p><p>Prefixed with a dot (a so-called <t>dotfile</t>), the file is hidden on <t>Linux</t> and other <t>Unix-like</t> systems. In the shell, it can be listed with other files using the <code>-a</code> <t>flag</t>.</p><code class=\"text--block\"><span class=\"text--block text--vsmall\">shell (Unix-like)</span><span class=\"code--kw\">ls</span> <span class=\"code--fl\">-a</span></code><p>The variables are set as key-value pairs.</p><code class=\"text--block\"><span class=\"text--block text--vsmall\">.env</span><span class=\"code--id\">VAR_NAME1</span><span class=\"code--op\">=</span><span class=\"code--vl\">value</span><br><span class=\"code--id\">VAR_NAME2</span><span class=\"code--op\">=</span><span class=\"code--vl\">\"value with spaces\"</span></code>"
    },
    {
        "name": "Get an environment variable in Node.js",
        "meta": "",
        "body": "<p>In <t>Node.js</t>, an <t>environment variable</t> can be accessed on <code><t>process.env</t></code>.</p><code class=\"text--block\"><span class=\"text--block text--vsmall\">Node.js</span><span class=\"code--kw\">const</span> <span class=\"code--id\">mode</span> <span class=\"code--op\">=</span> <span class=\"code--kw\">process</span><span class=\"code--dl\">.</span><span class=\"code--kw\">env</span><span class=\"code--dl\">.</span><span class=\"code--id\">NODE_ENV</span><span class=\"code--dl\">;</span></code><p><code><t>NODE_ENV</t></code> is used to set the mode in which a program should run, whether '<t>development</t>' or '<t>production</t>'.</p><p>If the environment has many variables, <t>destructuring</t> could be used to <t>assign</t> several at once.</p><code class=\"text--block\"></span><span class=\"code--kw\">const</span> <span class=\"code--dl\">{</span> <span class=\"code--id\">IN_PRODUCTION</span><span class=\"code--dl\">,</span> <span class=\"code--id\">PORT</span> <span class=\"code--dl\">}</span> <span class=\"code--op\">=</span> <span class=\"code--kw\">process</span><span class=\"code--dl\">.</span><span class=\"code--kw\">env</span><span class=\"code--dl\">;</span></code><p>Environment variables can be set in a <span class=\"text--mono\"><t>.env</t></span> file and <t>import</t>ed via the package <span class=\"text--mono\"><t>dotenv</t></span>. For a larger project, a <span class=\"text--mono\"><t>config</t></span> file or folder could also be created to manage them.</p><p>Both approaches are used in <a href=\"https://github.com/barcek/docNxgres\"><span class=\"text--mono\">docNxgres</span></a>.</p>"
    },
    {
        "name": "Use the dotenv package in Node.js",
        "meta": "",
        "body": "<p>The <span class=\"text--mono\">dotenv</span> package is used to import <t>environment variable</t>s from a <span class=\"text--mono\"><t>.env</t></span> file into <t>Node.js</t> code.</p><p>It can be installed via <t>npm</t> or <t>yarn</t>.</p><p>It is required in the code as usual and its <code>config</code> method is called.</p><code class=\"text--block\"><span class=\"text--block text--vsmall\">Node.js</span><span class=\"code--kw\">require</span><span class=\"code--dl\">(</span><span class=\"code--vl\">'dotenv'</span><span class=\"code--dl\">)</span><span class=\"code--dl\">.</span><span class=\"code--id\">config</span><span class=\"code--dl\">(</span><span class=\"code--dl\">)</span><span class=\"code--dl\">;</span></code><p>A variable set in the <span class=\"text--mono\">.env</span> file can then be accessed on <code>process.env</code>.</p><code class=\"text--block\"><span class=\"code--kw\">const</span> <span class=\"code--id\">mode</span> <span class=\"code--op\">=</span> <span class=\"code--kw\">process</span><span class=\"code--dl\">.</span><span class=\"code--kw\">env</span><span class=\"code--dl\">.</span><span class=\"code--id\">NODE_ENV</span><span class=\"code--dl\">;</span></code><ul><li><a href=\"https://www.npmjs.com/package/dotenv\">dotenv at npm</a></li></ul>"
    },
    {
        "name": "Install or uninstall a package with npm",
        "meta": "",
        "body": "<p>A <t>package</t> for <t>Node.js</t> can be installed via <t>npm</t>.</p><p>Installation uses the <code>install</code> or <code>i</code> command followed by any <t>flag</t>s and one or more package names, each separated by a space.</p><code class=\"text--block\"><span class=\"text--block text--vsmall\">shell</span><span class=\"code--kw\">npm</span> <span class=\"code--kw\">install</span> <span class=\"code--id\">package</span><span class=\"code--op\">-</span><span class=\"code--id\">name1</span> <span class=\"code--id\">package</span><span class=\"code--op\">-</span><span class=\"code--id\">name2</span></code><p>This installs locally, in the directory in which the command was run. Global installation uses the <code>--global</code> or <code>-g</code> flag.</p><code class=\"text--block\"><span class=\"code--kw\">npm</span> <span class=\"code--kw\">install</span> <span class=\"code--fl\">-g</span> <span class=\"code--id\">package</span><span class=\"code--op\">-</span><span class=\"code--id\">name1</span> <span class=\"code--id\">package</span><span class=\"code--op\">-</span><span class=\"code--id\">name2</span></code><p>Once installed globally, many packages can be installed locally offline.</p><p>If a package is for development only, it can be installed as a devDependency with the <code>--save-dev</code> or <code>-D</code> flag.</p><p>The full list of packages installed can be seen in the <span class=\"text--mono\"><t>package.json</t></span> file.</p><p>Each can be uninstalled with the <code>uninstall</code> command, with a global flag if required.</p>"
    },
    {
        "name": "Understand the static file (HTML/CSS/JS+)",
        "meta": "",
        "body": "<p>A static file is a code file ready to be used in the <t>browser</t>, complete or almost complete, enough to provide a good user experience.</p><p>It needs no further input from the <t>server</t> before being sent to the browser. However, it may contain references to other files required when first downloaded and links to other resources.</p><p>A key instance is an <span class=\"text--mono\"><t>index.html</t></span> file with the basic structure of an initial web page. This may reference one or more <t>CSS</t> <t>stylesheet</t>s, <t>JavaScript</t> (<t>JS</t>) files, <t>font</t> files or <t>image</t>s and link to other pages.</p><p>Often a server prepares an <span class=\"text--mono\">index.html</span> or other <span class=\"text--mono\">html</span> file from a <t>template</t>, inserting information before sending it to the browser. <t>Templating language</t>s include <t>Pug</t> (formerly Jade) and <t>EJS</t>.</p><p>Static files are often stored on the server in a <t>directory</t> named <span class=\"text--mono\">static</span> or <span class=\"text--mono\">public</span>.</p>"
    },
    {
        "name": "Understand the shell (terminal/CLI)",
        "meta": "",
        "body": "<p>A shell is a program allowing the user to interact with a computer system.<p></t>It can receive user input and send output via a textual interface called a terminal. The terminal was once a piece of hardware, but is now often a window in the graphical user interface (<t>GUI</t>).<p></p>The terms console and command line interface (<t>CLI</t>) are also used.</p><p>A common shell on <t>Linux</t> and other <t>Unix-like</t> systems is <t>Bash</t>, and on <t>Windows</t> <t>PowerShell</t>.</p><p>A terminal can be opened with the key combination <kbd>Ctrl</kbd>-<kbd>Alt</kbd>-<kbd>T</kbd> on at least some Linux <t>distros</t> and with <kbd>Win</kbd>+<kbd>i</kbd> on at least some versions of Windows.</p><p>Much can be accomplished with several <t>basic shell command</t>s, while multiple commands can be grouped into shell <t>script</t>s to simplify tasks. Programs installed on a system may provide additional commands, e.g. <t>npm</t>.</p><p>The <t>Python</t> programming language is also used for <t>scripting</t>, allowing a single script to be run on different <t>operating system</t>s.</p>"
    }
]
